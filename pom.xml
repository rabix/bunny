<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.rabix</groupId>
  <artifactId>rabix</artifactId>
  <version>0.6.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Rabix</name>

  <inceptionYear>2016</inceptionYear>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Janko Simonovic</name>
      <email>simonovic86@gmail.com</email>
      <organization>Seven Bridges Genomics</organization>
      <organizationUrl>http://www.sevenbridges.com</organizationUrl>
    </developer>
    <developer>
      <name>Sinisa Ivkovic</name>
      <email>sinisa.ivkovic@gmail.com</email>
      <organization>Seven Bridges Genomics</organization>
      <organizationUrl>http://www.sevenbridges.com</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:rabix/bunny.git</connection>
    <developerConnection>scm:git:ssh://git@github.com/rabix/bunny.git</developerConnection>
    <url>https://github.com/rabix/bunny</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>http://github.com/rabix/bunny/issues</url>
  </issueManagement>

  <modules>
    <module>rabix-engine</module>
    <module>rabix-bindings</module>
    <module>rabix-executor</module>
    <module>rabix-executor-rest</module>
    <module>rabix-ftp</module>
    <module>rabix-engine-rest</module>
    <module>rabix-common</module>
    <module>rabix-backend-local</module>
    <module>rabix-transport</module>
    <module>rabix-bindings-draft2</module>
    <module>rabix-bindings-draft3</module>
    <module>rabix-bindings-sb</module>
  </modules>

  <properties>
    <project.build.targetJdk>1.7</project.build.targetJdk>
    <!-- Build configuration -->
    <maven.compiler.source>${project.build.targetJdk}</maven.compiler.source>
    <maven.compiler.target>${project.build.targetJdk}</maven.compiler.target>
    <!-- Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <project.reporting.inputEncoding>UTF-8</project.reporting.inputEncoding>

    <!-- Build specific options -->

    <!-- Default jvm size for compiler, tests etc. -->
    <build.jvmsize>1024m</build.jvmsize>

    <!-- whether a release:perform automatically pushes the created files and tags to -->
    <!-- the upstream repository. Default is no. -->
    <release.push-changes>false</release.push-changes>
    <!-- tag name format, can be overridden by the project to provide different tags. -->
    <release.tag-name-format>@{project.artifactId}-@{project.version}</release.tag-name-format>

    <!-- Controls all the checkers run when building the project.             -->
    <!-- Can be activated with -Dcheck.skip-all=true on the command line. -->
    <check.skip-all>false</check.skip-all>
    <!-- Can be activated with -Dcheck.fail-all=true on the command line. -->
    <check.fail-all>false</check.fail-all>

    <!--
      Plugin versions, ordered like http://maven.apache.org/plugins/
    -->

    <!-- core plugins -->
    <plugin.clean.version>3.0.0</plugin.clean.version>
    <plugin.compiler.version>3.5.1</plugin.compiler.version>
    <plugin.deploy.version>2.8.2</plugin.deploy.version>
    <plugin.install.version>2.5.2</plugin.install.version>
    <plugin.resources.version>3.0.1</plugin.resources.version>

    <!-- packaging -->
    <plugin.jar.version>3.0.2</plugin.jar.version>
    <plugin.shade.version>2.4.3</plugin.shade.version>
    <plugin.source.version>3.0.1</plugin.source.version>

    <!-- tools -->
    <plugin.assembly.version>2.6</plugin.assembly.version>
    <plugin.dependency.version>2.10</plugin.dependency.version>
    <plugin.release.version>2.5.3</plugin.release.version>
    <plugin.scm.version>1.9.5</plugin.scm.version>

    <!-- https://github.com/ning/maven-dependency-versions-check-plugin/releases -->
    <plugin.dependency-versions-check.version>2.0.2</plugin.dependency-versions-check.version>

    <!-- https://github.com/HubSpot/dependency-management-maven-plugin/releases -->
    <plugin.dependency-management.version>0.7</plugin.dependency-management.version>

    <!-- https://github.com/basepom/duplicate-finder-maven-plugin/releases -->
    <plugin.duplicate-finder.version>1.2.1</plugin.duplicate-finder.version>

    <!--
      Dependency versions that should be the same everywhere.

      Each version property should be of the form "<artifactId>.version".
     -->
    <guice.version>4.0</guice.version>
    <guava.version>19.0</guava.version>
    <javax-inject.version>1</javax-inject.version>
    <javax-servlet.version>3.1.0</javax-servlet.version>
    <javax-ws-rs.version>2.0.1</javax-ws-rs.version>
    <slf4j.version>1.7.21</slf4j.version>
    <logback.version>1.1.7</logback.version>
    <jersey.version>2.23.2</jersey.version>
    <jackson2.version>2.8.1</jackson2.version>
    <jetty.version>9.2.18.v20160721</jetty.version>
    <rhino.version>1.7.7.1</rhino.version>
    <commons-cli.version>1.3.1</commons-cli.version>
    <commons-codec.version>1.10</commons-codec.version>
    <commons-collections.version>3.2.2</commons-collections.version>
    <commons-configuration.version>1.10</commons-configuration.version>
    <commons-daemon.version>1.0.15</commons-daemon.version>
    <commons-io.version>2.5</commons-io.version>
    <commons-lang3.version>3.4</commons-lang3.version>
    <commons-net.version>3.5</commons-net.version>
    <snakeyaml.version>1.17</snakeyaml.version>
    <jersey2-guice.version>0.10</jersey2-guice.version>
    <testng.version>6.9.10</testng.version>
  </properties>

  <!-- The following dependency should be the same everywhere. -->
  <dependencyManagement>
    <dependencies>

      <!-- Google Guice -->
      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>${guice.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-assistedinject</artifactId>
        <version>${guice.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-multibindings</artifactId>
        <version>${guice.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-servlet</artifactId>
        <version>${guice.version}</version>
      </dependency>

      <!-- Java Base libs (aka JDK 2) -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <!-- Java APIs -->
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>${javax-inject.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${javax-servlet.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>${javax-ws-rs.version}</version>
      </dependency>

      <!-- logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <!-- jersey -->
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>${jersey.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- jackson -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson2.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson2.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson2.version}</version>
      </dependency>

      <!-- jackson dataformat -->
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-avro</artifactId>
        <version>${jackson2.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-smile</artifactId>
        <version>${jackson2.version}</version>
      </dependency>

      <!-- jackson module -->
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-jaxb-annotations</artifactId>
        <version>${jackson2.version}</version>
      </dependency>

      <!-- jackson jaxrs -->
      <dependency>
        <groupId>com.fasterxml.jackson.jaxrs</groupId>
        <artifactId>jackson-jaxrs-base</artifactId>
        <version>${jackson2.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.jaxrs</groupId>
        <artifactId>jackson-jaxrs-json-provider</artifactId>
        <version>${jackson2.version}</version>
      </dependency>

      <!-- jetty -->
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${jetty.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.eclipse.jetty.orbit</groupId>
            <artifactId>javax.servlet</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-servlet</artifactId>
        <version>${jetty.version}</version>
      </dependency>

      <!-- Rhino (JavaScript engine) -->
      <dependency>
        <groupId>org.mozilla</groupId>
        <artifactId>rhino</artifactId>
        <version>${rhino.version}</version>
      </dependency>

      <!-- Apache Commons -->
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>${commons-collections.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-configuration</groupId>
        <artifactId>commons-configuration</artifactId>
        <version>${commons-configuration.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-daemon</groupId>
        <artifactId>commons-daemon</artifactId>
        <version>${commons-daemon.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-net</groupId>
        <artifactId>commons-net</artifactId>
        <version>${commons-net.version}</version>
      </dependency>

      <!-- misc -->
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>

      <dependency>
        <groupId>com.squarespace.jersey2-guice</groupId>
        <artifactId>jersey2-guice</artifactId>
        <version>${jersey2-guice.version}</version>
      </dependency>

      <!-- Testing -->
      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>${testng.version}</version>
        <exclusions>
          <exclusion>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${plugin.clean.version}</version>
        </plugin>

        <!-- Tweak the compiler to use more memory and use UTF-8 for the source code. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${plugin.compiler.version}</version>
          <configuration>
            <source>${project.build.targetJdk}</source>
            <target>${project.build.targetJdk}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <maxmem>${build.jvmsize}</maxmem>
            <showWarnings>true</showWarnings>
            <fork>true</fork>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${plugin.deploy.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${plugin.install.version}</version>
        </plugin>

        <!-- Resource plugins should always use UTF-8 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${plugin.resources.version}</version>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>

        <!-- Always build a jar with the test classes -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${plugin.jar.version}</version>
          <configuration>
            <!-- do not build an empty jar if the project is
                 e.g. a pom project -->
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addClasspath>false</addClasspath>
              </manifest>
              <manifestSections combine.children="append">
                <manifestSection>
                  <name>${project.groupId}:${project.artifactId}</name>
                  <manifestEntries>
                    <!-- project information -->
                    <Project-ArtifactId>${project.artifactId}</Project-ArtifactId>
                    <Project-GroupId>${project.groupId}</Project-GroupId>
                    <Project-Name>${project.name}</Project-Name>
                    <Project-Version>${project.version}</Project-Version>
                  </manifestEntries>
                </manifestSection>
              </manifestSections>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${plugin.shade.version}</version>
          <configuration>
            <createDependencyReducedPom>false</createDependencyReducedPom>
            <shadedArtifactAttached>true</shadedArtifactAttached>
            <filters>
              <filter>
                <artifact>*:*</artifact>
                <excludes>
                  <exclude>META-INF/*.SF</exclude>
                  <exclude>META-INF/*.DSA</exclude>
                  <exclude>META-INF/*.RSA</exclude>
                </excludes>
              </filter>
            </filters>
          </configuration>
        </plugin>

        <!-- bundle up source code into jars for both the main and the test sources -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${plugin.source.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${plugin.assembly.version}</version>
          <configuration>
            <!-- must be true for jar-with-dependencies builds -->
            <appendAssemblyId>true</appendAssemblyId>
            <!-- Always use GNU tar mode. -->
            <tarLongFileMode>gnu</tarLongFileMode>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${plugin.dependency.version}</version>
          <configuration>
            <skip>${check.skip-all}</skip>
            <failOnWarning>${check.fail-all}</failOnWarning>
            <ignoreNonCompile>true</ignoreNonCompile>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${plugin.release.version}</version>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <mavenExecutorId>forked-path</mavenExecutorId>
            <pushChanges>${release.push-changes}</pushChanges>
            <localCheckout>true</localCheckout>
            <preparationGoals>clean install</preparationGoals>
            <useReleaseProfile>false</useReleaseProfile>
            <tagNameFormat>${release.tag-name-format}</tagNameFormat>
            <goals>deploy</goals>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>${plugin.scm.version}</version>
          <configuration>
            <connectionType>developerConnection</connectionType>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.ning.maven.plugins</groupId>
          <artifactId>maven-dependency-versions-check-plugin</artifactId>
          <version>${plugin.dependency-versions-check.version}</version>
          <configuration>
            <skip>${check.skip-all}</skip>
            <failBuildInCaseOfConflict>${check.fail-all}</failBuildInCaseOfConflict>
          </configuration>
        </plugin>

        <plugin>
          <groupId>com.hubspot.maven.plugins</groupId>
          <artifactId>dependency-management-maven-plugin</artifactId>
          <version>${plugin.dependency-management.version}</version>
          <configuration>
            <skip>${check.skip-all}</skip>
            <fail>${check.fail-all}</fail>
            <requireManagement>
              <dependencies>false</dependencies>
              <plugins>false</plugins>
              <allowVersions>false</allowVersions>
              <allowExclusions>false</allowExclusions>
            </requireManagement>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.basepom.maven</groupId>
          <artifactId>duplicate-finder-maven-plugin</artifactId>
          <version>${plugin.duplicate-finder.version}</version>
          <configuration>
            <skip>${check.skip-all}</skip>
            <failBuildInCaseOfConflict>${check.fail-all}</failBuildInCaseOfConflict>
            <exceptions>
              <!-- Well done, Apache... -->
              <exception>
                <conflictingDependencies>
                  <dependency>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils</artifactId>
                  </dependency>
                  <dependency>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils-core</artifactId>
                  </dependency>
                  <dependency>
                    <groupId>commons-collections</groupId>
                    <artifactId>commons-collections</artifactId>
                  </dependency>
                </conflictingDependencies>
                <classes>
                  <class>org.apache.commons.collections.ArrayStack</class>
                  <class>org.apache.commons.collections.Buffer</class>
                  <class>org.apache.commons.collections.BufferUnderflowException</class>
                  <class>org.apache.commons.collections.FastHashMap</class>
                </classes>
              </exception>
              <exception>
                <conflictingDependencies>
                  <dependency>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils</artifactId>
                  </dependency>
                  <dependency>
                    <groupId>commons-beanutils</groupId>
                    <artifactId>commons-beanutils-core</artifactId>
                  </dependency>
                </conflictingDependencies>
                <packages>
                  <package>org.apache.commons.beanutils</package>
                </packages>
              </exception>
            </exceptions>
            <!-- Ruby is hopeless -->
            <ignoredDependencies>
              <dependency>
                <groupId>org.jruby</groupId>
                <artifactId>jruby-complete</artifactId>
              </dependency>
            </ignoredDependencies>
            <ignoredResourcePatterns>
              <ignoredResourcePattern>.*\.html</ignoredResourcePattern>
              <ignoredResourcePattern>about_files/.*</ignoredResourcePattern>
              <ignoredResourcePattern>plugin\.properties</ignoredResourcePattern>
              <ignoredResourcePattern>plugin\.xml</ignoredResourcePattern>
              <ignoredResourcePattern>.*\.java</ignoredResourcePattern>
              <!-- the log4j config should not be ignored but they are a constant -->
              <!-- source of annoyance. If you use log4j.properties from the classpath -->
              <!-- then you are in trouble anyway -->
              <ignoredResourcePattern>log4j\.xml</ignoredResourcePattern>
              <ignoredResourcePattern>log4j\.properties</ignoredResourcePattern>
              <ignoredResourcePattern>logback\.xml</ignoredResourcePattern>
              <ignoredResourcePattern>logback\.properties</ignoredResourcePattern>
            </ignoredResourcePatterns>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>

    <!-- This is the list of plugins used for the main build. -->
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>package</phase>
            <goals>
              <goal>jar-no-fork</goal>
              <goal>test-jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <phase>verify</phase>
            <goals>
              <goal>analyze-only</goal>
              <goal>analyze-duplicate</goal>
              <goal>analyze-dep-mgt</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>com.ning.maven.plugins</groupId>
        <artifactId>maven-dependency-versions-check-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.hubspot.maven.plugins</groupId>
        <artifactId>dependency-management-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <phase>verify</phase>
            <goals>
              <goal>analyze</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
